---
# tasks file for k8slave

- name: "checking for k8 repo"
  file:
          path: "/etc/yum.repos.d/kubernetes.repo"
          state: touch
  register: x
- name: "confguring repo for K8s"
  shell:  |
            cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
            [kubernetes]
            name=Kubernetes
            baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
            enabled=1
            gpgcheck=1
            repo_gpgcheck=1
            gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            EOF
  when: x["diff"]["before"]["state"]!="file"

- name: "Installing Docker"
  package:
          name: "docker"
          state: present

- name: "Starting the docker service"
  service:
          name: "docker"
          state: started
          enabled: yes

- name: "Installing kubeadm"
  package:
          name: "kubeadm"
          state: present

- name: "Starting the kubelet service"
  service:
          name: "kubelet"
          state: started
          enabled: yes

- name: "Setting up driver docker cgroup to use systemd instead of cgroupfs"
  copy:
          dest: "/etc/docker/daemon.json"
          content: '{
                  "exec-opts": ["native.cgroupdriver=systemd"]
                  }'
- name: "Restarting docker service"
  service:
          name: "docker"
          state: restarted

- name: "Installing iproute-tc software for traffic control"
  package:
          name: "iproute-tc"
          state: present

- name: "Creating a file"
  file:
          path: "/etc/sysctl.d/k8s.conf"
          state: touch
          group: "root"
          owner: "root"
          mode: 0644

- name: "Network configuration"
  blockinfile:
          path: "/etc/sysctl.d/k8s.conf"
          block: |
                  net.bridge.bridge-nf-call-ip6tables = 1
                  net.bridge.bridge-nf-call-iptables = 1
          state: present

- name: " Starting sysctl service"
  command: "sysctl --system"

- name: "Joining to the master....."
  command: "{{ join_token }}"

- debug:
        msg: " Worker Node connected to Master and is ready"
